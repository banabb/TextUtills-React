{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","onChange","handleOnChange","htmlfor","TextForm","useState","text","setText","style","color","heading","value","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d450acd2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/textform\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} onChange={props.handleOnChange} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps ={\r\n    title: \"Set title here\",\r\n    aboutText: \"About \"\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Changed to Uppercase\", \"success\");\r\n    }\r\n    const handledownClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Changed to LowerCase\", \"success\");\r\n    }\r\n    const handleclearClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text)\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text has been Clear\", \"success\");\r\n    }\r\n    const handleCopy = ()=>{\r\n         var text = document.getElementById(\"myBox\");\r\n             text.select();\r\n             text.setSelectionRange(0, 9999);\r\n             navigator.clipboard.writeText(text.value);\r\n\r\n            props.showAlert(\"Copied to Clipboard\", \"success\");\r\n           \r\n    }\r\n    const handleExtraSpace = ()=>{\r\n       let newText = text.split(/[ ]+/);\r\n       setText(newText.join(\" \"));\r\n       props.showAlert(\"Extra Spcaces Removed\", \"success\");\r\n        \r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    // text = \"New Text\"; // Wrong way to change the state\r\n    // setText(\"new Text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n            <h1 className=\"text-center my-2\">{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode ==='dark'?'grey':'white', color:props.mode ==='dark'?'white':'black'}} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handledownClick}>Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpace}>Clear Space</button>\r\n            \r\n     </div>\r\n     <div className=\"container my-2\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n         <h1>Your text Summary</h1>\r\n         <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n         <p>{0.008 * text.split(\" \").length} Minutes to Read</p>\r\n         <h2>Preview</h2>\r\n         <p>{text.length>0?text:\"Enter something in above text area to preview it here\"}</p>\r\n     </div>\r\n     </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\n// import About from './Component/About';\nimport React, { useState } from 'react';\nimport Alert from './Component/Alert';\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  \n  const showAlert = (message, type)=>{\n      setAlert ({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1000);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n        setmode('dark');\n        document.body.style.backgroundColor = '#042743';\n        showAlert(\"Dark Mode Enabled\", \"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Enabled\", \"success\");\n    }\n  }\n  \n\n  return (\n     <>\n        {/* <Navbar title=\"TextUtills\" aboutText=\"About TextUtills\"/> */}\n        {/* <Router> */}\n\n        <Navbar title=\"Text Utility\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3 \">\n          {/* <Switch> */}\n            {/* <Route path=\"/about\"> */}\n             {/* <About heading=\"About Us\" mode ={mode}/> */}\n            {/* </Route> */}\n            {/* <Route path =\"/\"> */}\n                <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n        {/* </Router> */}\n\n        \n    </>\n    \n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}